input {
  file {
    type => "log2"
    path => ["/home/marta/R8_Naranja/Datos/Originales/log2.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type=> 'comp_a'
    path => ["/home/marta/R8_Naranja/Datos/Originales/Comp_A.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type=> 'comp_b'
    path => ["/home/marta/R8_Naranja/Datos/Originales/Comp_B.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type=> 'comp_c'
    path => ["/home/marta/R8_Naranja/Datos/Originales/Comp_C.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type=> 'comp_d'
    path => ["/home/marta/R8_Naranja/Datos/Originales/Comp_D.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type=> 'apache'
    path => ["/home/marta/R8_Naranja/Datos/Originales/apache-logs.txt"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type => "DUV"
    path => ["/home/marta/R8_Naranja/Datos/Transformados/unicacuca.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
  file {
    type => "snmp"
    path => ["/home/marta/R8_Naranja/Datos/Originales/reto8-registros_snmp.csv"]
    start_position => "beginning"
    sincedb_path => "/tmp/logstash_sincedb"
  }
}

filter {
  if [type] =="log2" {
    csv {
      separator => ","
      skip_header => "true"
      columns =>["Source Port","Destination Port","NAT Source Port","NAT Destination Port","Action","Bytes","Bytes Sent","Bytes Received","Packets","Elapsed Time (sec)","pkts_sent","pkts_received"]
    }
    mutate {
      rename => { "Source Port" => "Source_Port" }
      rename => { "Destination Port" => "Destination_Port" }
      rename => { "NAT Source Port" => "NAT_Source_Port" }
      rename => { "NAT Destination Port" => "NAT_Destination_Port" }
      rename => { "Bytes Sent" => "Bytes_Sent" }
      rename => { "Bytes Received" => "Bytes_Received" }
      rename => { "Elapsed Time (sec)" => "Elapsed_Time_(sec)" }
    }
  }
  if [type] == "comp_a" {
   csv {
     separator=>","
     skip_header=> "true"
     columns => ["Presion","Temperatura","Frecuencia","Potencia_Medida"]
    }
  }
     
  if [type] == "comp_b" {
   csv {
     separator=>","
     skip_header=> "true"
     columns => ["Presion","Temperatura","Frecuencia","Potencia_Medida"]
    }
  }
     
  if [type] == "comp_c" {
   csv {
     separator=>","
     skip_header=> "true"
     columns => ["Presion","Temperatura","Frecuencia","Potencia_Medida"]
    }
  }
   
  if [type] == "comp_d" {
   csv {
     separator=>","
     skip_header=> "true"
     columns => ["Presion","Temperatura","Frecuencia","Potencia_Medida"]
    }
  }
     
  if [type] == "apache" {
    grok {
      match => { "message" => "%{IP:client_ip} %{DATA:ident} %{DATA:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:http_method} %{URIPATH:request_path} HTTP/%{NUMBER:http_version}\" %{NUMBER:http_status} %{NUMBER:response_size} \"%{DATA:referrer}\" \"%{DATA:user_agent}\""}
    }
  }
  if [type] =="DUV" {
    csv {
      separator => ","
      skip_header => "true"
      columns => ["Flow.ID","Source.IP","Source.Port","Destination.IP","Destination.Port","Protocol","Timestamp","Flow.duration","Total.Fwd.Packets","Total.Backward.Packets","Total.Length.of.Fwd.Packets","Total.Length.of.Bwd.Packets","Fwd.Packet.Length.Max","Fwd.Packet.Length.Min","Fwd.Packet.Length.Mean","Fwd.Packet.Length.Std","Bwd.Packet.Length.Max","Bwd.Packet.Length.Min","Bwd.Packet.Length.Min", "Bwd.Packet.Length.Mean", "Bwd.Packet.Length.Std","Flow.Bytes.s","Flow.Packets", "Flow.IAT.Mean", "Flow.IAT.Std", "Flow.IAT.Max", "Flow.IAT.Min", "Flow.IAT.Total", "Fwd.IAT.Total", "Fwd.IAT.Mean", "Fwd.IAT.Std", "Fwd.IAT.Max", "Fwd.IAT.Min", "Bwd.IAT.Total", "Bwd.IAT.Mean", "Bwd.IAT.Std", "Bwd.IAT.Max", "Bwd.IAT.Min", "Fwd.PSH.Flags", "Bwd.PSH.Flags", "Fwd.URG.Flags", "Bwd.URG.Flags", "Fwd.Header.Length", "Bwd.Header.Length", "Fwd.Packets.s", "Bwd.Packets.s", "Min.Packet.Length", "Max.Packet.Length", "Packet.Length.Mean", "Packet.Length.Std", "Packet.Length.Variance", "FIN.Flag.Count", "SYN.Flag.Count", "RST.Flag.Count", "PSH.Flag.Count", "ACK.Flag.Count", "URG.Flag.Count", "CWE.Flag.Count", "ECE.Flag.Count", "Down.Up.Ratio", "Average.Packet.Size", "Avg.Fwd.Segment.Size", "Avg.Bwd.Segment.Size", "Fwd.Header.Length1", "Fwd.Avg.Bytes.Bulk", "Fwd.Avg.Packets.Bulk", "Fwd.Avg.Bulk.Rate", "Bwd.Avg.Bytes.Bulk", "Bwd.Avg.Packets.Bulk", "Bwd.Avg.Bulk.Rate", "Subflow.Fwd.Packets", "Subflow.Fwd.Bytes", "Subflow.Bwd.Packets", "Subflow.Bwd.Bytes", "Init_Win_bytes_forward", "Init_Win_bytes_backward", "act_data_pkt_fwd", "min_seg_size_forward", "Active.Mean", "Active.Std", "Active.Max", "Active.Min", "Idle.Mean", "Idle.Std", "Idle.Max", "Idle.Min","Label", "L7Protocol", "ProtocolName"]
    }
  }
  if [type] == "snmp" {
    grok {
      match => { "message" => '%{DATA:tiempo},%{DATA:trapOID},%{DATA:macAddress},%{DATA:accessPoint},%{DATA:receiverMacAddress},%{NUMBER:interfaceIndex},%{IP:deviceIPAddress},%{EMAILADDRESS:username},%{USERNAME:wlanName}' }
    }
  }
}

output {
   if [type] =="log2" {
      elasticsearch {
        hosts => ["https://localhost:9200"]
        index => "log2"
        user => "elastic"
        password => "fpLcBH8a3VVZBc0w7OnL"
        cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
      }
  }
  if [type] =="comp_a" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "comp_a"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert=> "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
  if [type] =="comp_b" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "comp_b"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
  if [type] =="comp_c" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "comp_c"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
  if [type] =="comp_d" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "comp_d"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
  if [type] =="apache" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "apache"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
  if [type] =="DUV" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "DUV"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
  if [type] =="snmp" {
	  elasticsearch {
      hosts => ["https://localhost:9200"]
      index => "snmp"
      user => "elastic"
      password => "fpLcBH8a3VVZBc0w7OnL"
      cacert => "/home/marta/elasticsearch-8.4.3/config/certs/http_ca.crt"
    }
  }
 stdout {
   codec => rubydebug}
}
